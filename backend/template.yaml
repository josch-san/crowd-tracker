AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CrowdTracker - Backend

Parameters:
  Mode:
    Type: String
    Description: Build mode
    Default: development
    AllowedValues:
      - development
      - stage
      - production
  TableName:
    Type: String
    Description: DynamoDB table name
  UserPoolId:
    Type: String
    Description: Cognito user pool id

Mappings:
  ModeMap:
    development:
      ModeSuffix: -dev
      ApiName: Crowd Tracker Dev
    stage:
      ModeSuffix: -test
      ApiName: Crowd Tracker Stage
    production:
      ModeSuffix: ''
      ApiName: Crowd Tracker

Resources:
  BackendAppSyncRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      RoleName: !Sub
        - 'CrowdTrackerAppSyncRole${suffix}'
        - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
      Description: CrowdTracker project appsync service role.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub
            - 'appsync-policy${suffix}'
            - suffix: !FindInMap [ModeMap, !Ref Mode, ModeSuffix]
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - 
                Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  # - dynamodb:DeleteItem
                Resource:
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}'
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}/*'
      Tags:
        - Key: application
          Value: crowd-tracker
        - Key: module
          Value: backend
        - Key: environment
          Value: !Ref Mode

  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !FindInMap [ModeMap, !Ref Mode, ApiName]
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        AwsRegion: !Ref AWS::Region
        UserPoolId: !Ref UserPoolId
        DefaultAction: ALLOW
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      Tags:
        - Key: application
          Value: crowd-tracker
        - Key: module
          Value: backend
        - Key: environment
          Value: !Ref Mode

  ApiSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DefinitionS3Location: schema.graphql

  DynamoDBDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      Type: AMAZON_DYNAMODB
      Name: crowdTrackerDatabase
      Description: Crowd Tracker DynamoDB connection
      DynamoDBConfig:
        AwsRegion: !Ref AWS::Region
        TableName: !Ref TableName
      ServiceRoleArn: !GetAtt BackendAppSyncRole.Arn

  QueryGetTenantResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: ApiSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBDataSource.Name
      TypeName: Query
      FieldName: getTenant
      RequestMappingTemplateS3Location: resolvers/Tenant/Query/getTenant.req.vtl
      ResponseMappingTemplateS3Location: resolvers/Tenant/Query/getTenant.res.vtl

  QueryListTenantsResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: ApiSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBDataSource.Name
      TypeName: Query
      FieldName: listTenants
      RequestMappingTemplateS3Location: resolvers/Tenant/Query/listTenants.req.vtl
      ResponseMappingTemplateS3Location: resolvers/Tenant/Query/listTenants.res.vtl

  MutationCreateTenantResolver:
    Type: AWS::AppSync::Resolver
    DependsOn: ApiSchema
    Properties:
      ApiId: !GetAtt GraphQLApi.ApiId
      DataSourceName: !GetAtt DynamoDBDataSource.Name
      TypeName: Mutation
      FieldName: createTenant
      RequestMappingTemplateS3Location: resolvers/Tenant/Mutation/createTenant.req.vtl
      ResponseMappingTemplateS3Location: resolvers/Tenant/Mutation/createTenant.res.vtl

Outputs:
  AppSyncUrl:
    Value: !GetAtt GraphQLApi.GraphQLUrl
    Description: URL for appsync api
  ApiAuthenticationType:
    Value: AMAZON_COGNITO_USER_POOLS
    Description: Main appsync API authentication type
